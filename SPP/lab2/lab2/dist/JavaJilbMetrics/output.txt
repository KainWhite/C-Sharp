         ;
         []           [   ];
                 ;
StringTokenizer st;

public         () {
		           ;
		       ;
		   (       ;  str.length;   )
		{
			  (str.charAt     )
			{
				       ;
			}
		}
		    []              [     ];
		   (       ;  str.length;   )
		{
			  (str.charAt     )
			{
				   [ ]  str.charAt( );
				   ;
			}
		}

		         
		         ;
		         ;
		          ;
		            ;
		   []             [ ];
		   (         ;      ;    ){
			   (         ;      ;    ){
				  [ ]     ;}}


		
		
		
		    []                [     ];
		
		    []                [ ];
		   (         ;      ;    ){
			   (         ;      ;    ){
				    [ ]      [ ][ ];}}
		   (         ;       ;    ) {
			    [ ]       [   ]    pq.peek;
			                    ;
			           ;
		}
		
		    []                [     ];
		
		               [ ];
		   (         ;      ;    ){
			   (         ;      ;    ){
				    [ ]      [ ][ ];}}
		pq.clear();
		   (        :     ){       (   );}
		
		   (         ;       ;    ) {
			    [ ]       [   ]    pq.peek;
			                    ;
			           ;
		}
		


		
		      Long.MIN_VALUE;
		
		   (         ;       ;    ) {
			               [ ];
			           [   ]       (   );
			      Math.max(   ,    );

		}
		
		   (         ;       ;    ) {
			               [ ];
			           [   ]       (   );
			      Math.max(   );
		}

	   [][]                [ ][ ];
            (         ;      ;    ) {
                (         ;      ;    ) {
                     [ ][ ]   in.nextInt();
            }}
	           ;
              ,       ,       ;
       []              [ ];
          (       ) {
                    ;       
            (         ;      ;    ) {
                (         ;      ;    ) {
                   (     [ ][ ]        [ ][ ]            [ ][ ]) {
                         [ ][ ]        [ ][ ]        [ ][ ]            [ ][ ];
                        (         ;      ;    ) {
                            (         ;      ;    ){
                                     ;
                               {

                                      (     [ ][ ]    ) {
                                    case   : 
                                                ;
                                             ;
                                    case  : 
                                                    [ ][ ]        [ ][ ];
                                             ;
                                    default: 
                                                 ;
                                             ;
                                }

                                   ;
                            }     (   );
                        }    
                    }        
                }
            }
        }
           [ ]      ;
    }
    System.out.println(   [   ]);
}
		
    public static          (   []  ,           ) {
          []               [        ];
 
          (       ;   bucket.length;    ) {
               [ ]  ;
      }
 
          (       ;   a.length;    ) {
               [ [ ]]  ;
      }
 
                  ;
          (       ;   bucket.length;    ) {
             (       ;         [ ];    ) {
             [        ]  ;
         }
      }
   }
public static                (          ) {
          (               ) {
                   false;
        }
           (        ;             ;    ) {
              (               ) {
                       false;

            }
        }
               true;
}
static          (       ,        ,         )
{
      (     ){      ;}
      (        )
    {
        (     ){;}
            ;
    }
       (       ;    ;   )
    {
          (     ,        ,       );
    }
        (   ,      ,       );
}

  public static                (   []     ) {
                        ;
              (             [ ]       [     ]) {
               ;
        }
           (      ) {
                   false;
        }
                        ;
              (    [ ]       [     ]) {
               ;
        }
                       [     ];
            [     ]       [ ];
            [ ]       ;
        Arrays.sort(    ,  , data.length);
               true;
}

public static          (      ) 
{
                      ;
              (     ) {
                   ;
                    ;
        }
                     ;
}

public static            (      ,       ,       ,       ) {
                     (     )   (     )   (     )   (     );
              Math.sqrt(   );
                                    ;
                Math.sqrt(     );
                          ;
}

public static         (      ,       ) {
           (      ) {
                    ;
        }
                  ( ,      );
}
public static         (      ,       ,         ) {
           (      ) {
                    ;
        }
           (      ) {
                    ;
        }
                      ( ,      ,    );
           (          ) {
                                  ;
        } 
	else {
                         (             )      ;
	}
}
  ()
{
  (){}
else
{
      (){
case case case case default
}
}
}

